/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'groovy'
}
apply from: 'versions.gradle'
apply plugin:'java'
apply plugin: 'maven-publish'
version = '0.2.10'
group = 'webapi.library'

tasks.named('jar') {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'webapi.library'
            artifactId = 'lib'
            version = '0.2.10'
            from components.java
        }
    }
    repositories {
        mavenLocal()
     /*   maven {
            name = "LocalTestRepo"
            url = uri("file:////Users/stanislav/.m2/repository")
        }*/
    }
}
repositories {
    // Use Maven Central for resolving dependencies.
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    api 'org.apache.commons:commons-math3:3.6.1'
    implementation 'com.google.guava:guava:30.1.1-jre'

    annotationProcessor "org.projectlombok:lombok:${versions.lombok}"
    compileOnly "org.projectlombok:lombok:${versions.lombok}"

    implementation "org.slf4j:slf4j-api:${versions.slf4j}",
            "org.springframework:spring-context:${versions.spring}",
            "org.springframework:spring-jdbc:${versions.spring}",
            "org.springframework:spring-webflux:${versions.springWebFlux}",
            "io.micrometer:micrometer-core:${versions.micrometer}",
            "redis.clients:jedis:${versions.jedis}",
            "org.json:json:${versions.json}",
            "javax.inject:javax.inject:${versions.java.inject}",
            "javax.annotation:javax.annotation-api:${versions.java.annotations}",
            "io.vavr:vavr:${versions.vavr}",
            "org.aspectj:aspectjrt:${versions.aspectj.aspectjrt}",
            "org.aspectj:aspectjweaver:${versions.aspectj.aspectjweaver}"
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
